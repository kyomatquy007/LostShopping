#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LostShoppingServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SHOPPING")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertSUPPIER(SUPPIER instance);
    partial void UpdateSUPPIER(SUPPIER instance);
    partial void DeleteSUPPIER(SUPPIER instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertDELIVERY_SERVICE(DELIVERY_SERVICE instance);
    partial void UpdateDELIVERY_SERVICE(DELIVERY_SERVICE instance);
    partial void DeleteDELIVERY_SERVICE(DELIVERY_SERVICE instance);
    partial void InsertIMAGE(IMAGE instance);
    partial void UpdateIMAGE(IMAGE instance);
    partial void DeleteIMAGE(IMAGE instance);
    partial void InsertORDER_DETAIL(ORDER_DETAIL instance);
    partial void UpdateORDER_DETAIL(ORDER_DETAIL instance);
    partial void DeleteORDER_DETAIL(ORDER_DETAIL instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertPAYMENT(PAYMENT instance);
    partial void UpdatePAYMENT(PAYMENT instance);
    partial void DeletePAYMENT(PAYMENT instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertSUBCATEGORY(SUBCATEGORY instance);
    partial void UpdateSUBCATEGORY(SUBCATEGORY instance);
    partial void DeleteSUBCATEGORY(SUBCATEGORY instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SHOPPINGConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<SUPPIER> SUPPIERs
		{
			get
			{
				return this.GetTable<SUPPIER>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<DELIVERY_SERVICE> DELIVERY_SERVICEs
		{
			get
			{
				return this.GetTable<DELIVERY_SERVICE>();
			}
		}
		
		public System.Data.Linq.Table<IMAGE> IMAGEs
		{
			get
			{
				return this.GetTable<IMAGE>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<PAYMENT> PAYMENTs
		{
			get
			{
				return this.GetTable<PAYMENT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<SUBCATEGORY> SUBCATEGORies
		{
			get
			{
				return this.GetTable<SUBCATEGORY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAT_ID;
		
		private string _CAT_NAME;
		
		private string _CAT_DES;
		
		private EntitySet<SUBCATEGORY> _SUBCATEGORies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAT_IDChanging(int value);
    partial void OnCAT_IDChanged();
    partial void OnCAT_NAMEChanging(string value);
    partial void OnCAT_NAMEChanged();
    partial void OnCAT_DESChanging(string value);
    partial void OnCAT_DESChanged();
    #endregion
		
		public CATEGORY()
		{
			this._SUBCATEGORies = new EntitySet<SUBCATEGORY>(new Action<SUBCATEGORY>(this.attach_SUBCATEGORies), new Action<SUBCATEGORY>(this.detach_SUBCATEGORies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CAT_ID
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CAT_ID");
					this.OnCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_NAME", DbType="NVarChar(50)")]
		public string CAT_NAME
		{
			get
			{
				return this._CAT_NAME;
			}
			set
			{
				if ((this._CAT_NAME != value))
				{
					this.OnCAT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CAT_NAME = value;
					this.SendPropertyChanged("CAT_NAME");
					this.OnCAT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_DES", DbType="NVarChar(100)")]
		public string CAT_DES
		{
			get
			{
				return this._CAT_DES;
			}
			set
			{
				if ((this._CAT_DES != value))
				{
					this.OnCAT_DESChanging(value);
					this.SendPropertyChanging();
					this._CAT_DES = value;
					this.SendPropertyChanged("CAT_DES");
					this.OnCAT_DESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_SUBCATEGORY", Storage="_SUBCATEGORies", ThisKey="CAT_ID", OtherKey="SUBCAT_CAT_ID")]
		public EntitySet<SUBCATEGORY> SUBCATEGORies
		{
			get
			{
				return this._SUBCATEGORies;
			}
			set
			{
				this._SUBCATEGORies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SUBCATEGORies(SUBCATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_SUBCATEGORies(SUBCATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUPPIER")]
	public partial class SUPPIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUP_ID;
		
		private string _SUP_COMPANY_NAME;
		
		private string _SUP_WEB_URL;
		
		private string _SUP_ADDRESS;
		
		private string _SUP_TELEPHONE;
		
		private string _SUP_EMAIL;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUP_IDChanging(int value);
    partial void OnSUP_IDChanged();
    partial void OnSUP_COMPANY_NAMEChanging(string value);
    partial void OnSUP_COMPANY_NAMEChanged();
    partial void OnSUP_WEB_URLChanging(string value);
    partial void OnSUP_WEB_URLChanged();
    partial void OnSUP_ADDRESSChanging(string value);
    partial void OnSUP_ADDRESSChanged();
    partial void OnSUP_TELEPHONEChanging(string value);
    partial void OnSUP_TELEPHONEChanged();
    partial void OnSUP_EMAILChanging(string value);
    partial void OnSUP_EMAILChanged();
    #endregion
		
		public SUPPIER()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SUP_ID
		{
			get
			{
				return this._SUP_ID;
			}
			set
			{
				if ((this._SUP_ID != value))
				{
					this.OnSUP_IDChanging(value);
					this.SendPropertyChanging();
					this._SUP_ID = value;
					this.SendPropertyChanged("SUP_ID");
					this.OnSUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_COMPANY_NAME", DbType="NVarChar(50)")]
		public string SUP_COMPANY_NAME
		{
			get
			{
				return this._SUP_COMPANY_NAME;
			}
			set
			{
				if ((this._SUP_COMPANY_NAME != value))
				{
					this.OnSUP_COMPANY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SUP_COMPANY_NAME = value;
					this.SendPropertyChanged("SUP_COMPANY_NAME");
					this.OnSUP_COMPANY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_WEB_URL", DbType="VarChar(30)")]
		public string SUP_WEB_URL
		{
			get
			{
				return this._SUP_WEB_URL;
			}
			set
			{
				if ((this._SUP_WEB_URL != value))
				{
					this.OnSUP_WEB_URLChanging(value);
					this.SendPropertyChanging();
					this._SUP_WEB_URL = value;
					this.SendPropertyChanged("SUP_WEB_URL");
					this.OnSUP_WEB_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_ADDRESS", DbType="NVarChar(50)")]
		public string SUP_ADDRESS
		{
			get
			{
				return this._SUP_ADDRESS;
			}
			set
			{
				if ((this._SUP_ADDRESS != value))
				{
					this.OnSUP_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._SUP_ADDRESS = value;
					this.SendPropertyChanged("SUP_ADDRESS");
					this.OnSUP_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_TELEPHONE", DbType="VarChar(20)")]
		public string SUP_TELEPHONE
		{
			get
			{
				return this._SUP_TELEPHONE;
			}
			set
			{
				if ((this._SUP_TELEPHONE != value))
				{
					this.OnSUP_TELEPHONEChanging(value);
					this.SendPropertyChanging();
					this._SUP_TELEPHONE = value;
					this.SendPropertyChanged("SUP_TELEPHONE");
					this.OnSUP_TELEPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUP_EMAIL", DbType="VarChar(30)")]
		public string SUP_EMAIL
		{
			get
			{
				return this._SUP_EMAIL;
			}
			set
			{
				if ((this._SUP_EMAIL != value))
				{
					this.OnSUP_EMAILChanging(value);
					this.SendPropertyChanging();
					this._SUP_EMAIL = value;
					this.SendPropertyChanged("SUP_EMAIL");
					this.OnSUP_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPIER_PRODUCT", Storage="_PRODUCTs", ThisKey="SUP_ID", OtherKey="PRO_SUP_ID")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPIER = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPIER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CUS_ID;
		
		private string _CUS_ACCOUNT;
		
		private string _CUS_PASS;
		
		private string _CUS_FIRSTNAME;
		
		private string _CUS_LASTNAME;
		
		private string _CUS_ADDRESS;
		
		private string _CUS_CITY;
		
		private string _CUS_COUNTRY;
		
		private string _CUS_PHONE;
		
		private string _CUS_EMAIL;
		
		private System.Nullable<System.DateTime> _CUS_REGISTRATION_DATE;
		
		private EntitySet<ORDER> _ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUS_IDChanging(int value);
    partial void OnCUS_IDChanged();
    partial void OnCUS_ACCOUNTChanging(string value);
    partial void OnCUS_ACCOUNTChanged();
    partial void OnCUS_PASSChanging(string value);
    partial void OnCUS_PASSChanged();
    partial void OnCUS_FIRSTNAMEChanging(string value);
    partial void OnCUS_FIRSTNAMEChanged();
    partial void OnCUS_LASTNAMEChanging(string value);
    partial void OnCUS_LASTNAMEChanged();
    partial void OnCUS_ADDRESSChanging(string value);
    partial void OnCUS_ADDRESSChanged();
    partial void OnCUS_CITYChanging(string value);
    partial void OnCUS_CITYChanged();
    partial void OnCUS_COUNTRYChanging(string value);
    partial void OnCUS_COUNTRYChanged();
    partial void OnCUS_PHONEChanging(string value);
    partial void OnCUS_PHONEChanged();
    partial void OnCUS_EMAILChanging(string value);
    partial void OnCUS_EMAILChanged();
    partial void OnCUS_REGISTRATION_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCUS_REGISTRATION_DATEChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ACCOUNT", DbType="VarChar(50)")]
		public string CUS_ACCOUNT
		{
			get
			{
				return this._CUS_ACCOUNT;
			}
			set
			{
				if ((this._CUS_ACCOUNT != value))
				{
					this.OnCUS_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._CUS_ACCOUNT = value;
					this.SendPropertyChanged("CUS_ACCOUNT");
					this.OnCUS_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PASS", DbType="VarChar(50)")]
		public string CUS_PASS
		{
			get
			{
				return this._CUS_PASS;
			}
			set
			{
				if ((this._CUS_PASS != value))
				{
					this.OnCUS_PASSChanging(value);
					this.SendPropertyChanging();
					this._CUS_PASS = value;
					this.SendPropertyChanged("CUS_PASS");
					this.OnCUS_PASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_FIRSTNAME", DbType="NVarChar(20)")]
		public string CUS_FIRSTNAME
		{
			get
			{
				return this._CUS_FIRSTNAME;
			}
			set
			{
				if ((this._CUS_FIRSTNAME != value))
				{
					this.OnCUS_FIRSTNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_FIRSTNAME = value;
					this.SendPropertyChanged("CUS_FIRSTNAME");
					this.OnCUS_FIRSTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_LASTNAME", DbType="NVarChar(20)")]
		public string CUS_LASTNAME
		{
			get
			{
				return this._CUS_LASTNAME;
			}
			set
			{
				if ((this._CUS_LASTNAME != value))
				{
					this.OnCUS_LASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_LASTNAME = value;
					this.SendPropertyChanged("CUS_LASTNAME");
					this.OnCUS_LASTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ADDRESS", DbType="NVarChar(50)")]
		public string CUS_ADDRESS
		{
			get
			{
				return this._CUS_ADDRESS;
			}
			set
			{
				if ((this._CUS_ADDRESS != value))
				{
					this.OnCUS_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUS_ADDRESS = value;
					this.SendPropertyChanged("CUS_ADDRESS");
					this.OnCUS_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_CITY", DbType="NVarChar(20)")]
		public string CUS_CITY
		{
			get
			{
				return this._CUS_CITY;
			}
			set
			{
				if ((this._CUS_CITY != value))
				{
					this.OnCUS_CITYChanging(value);
					this.SendPropertyChanging();
					this._CUS_CITY = value;
					this.SendPropertyChanged("CUS_CITY");
					this.OnCUS_CITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_COUNTRY", DbType="NVarChar(20)")]
		public string CUS_COUNTRY
		{
			get
			{
				return this._CUS_COUNTRY;
			}
			set
			{
				if ((this._CUS_COUNTRY != value))
				{
					this.OnCUS_COUNTRYChanging(value);
					this.SendPropertyChanging();
					this._CUS_COUNTRY = value;
					this.SendPropertyChanged("CUS_COUNTRY");
					this.OnCUS_COUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PHONE", DbType="VarChar(20)")]
		public string CUS_PHONE
		{
			get
			{
				return this._CUS_PHONE;
			}
			set
			{
				if ((this._CUS_PHONE != value))
				{
					this.OnCUS_PHONEChanging(value);
					this.SendPropertyChanging();
					this._CUS_PHONE = value;
					this.SendPropertyChanged("CUS_PHONE");
					this.OnCUS_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_EMAIL", DbType="VarChar(30)")]
		public string CUS_EMAIL
		{
			get
			{
				return this._CUS_EMAIL;
			}
			set
			{
				if ((this._CUS_EMAIL != value))
				{
					this.OnCUS_EMAILChanging(value);
					this.SendPropertyChanging();
					this._CUS_EMAIL = value;
					this.SendPropertyChanged("CUS_EMAIL");
					this.OnCUS_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_REGISTRATION_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> CUS_REGISTRATION_DATE
		{
			get
			{
				return this._CUS_REGISTRATION_DATE;
			}
			set
			{
				if ((this._CUS_REGISTRATION_DATE != value))
				{
					this.OnCUS_REGISTRATION_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUS_REGISTRATION_DATE = value;
					this.SendPropertyChanged("CUS_REGISTRATION_DATE");
					this.OnCUS_REGISTRATION_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_ORDERs", ThisKey="CUS_ID", OtherKey="ORD_CUS_ID")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DELIVERY_SERVICE")]
	public partial class DELIVERY_SERVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SER_ID;
		
		private string _SER_NAME;
		
		private string _SER_DES;
		
		private System.Nullable<double> _SER_PARCEL_WEIGHT;
		
		private System.Nullable<double> _SER_MAXLENGTH;
		
		private System.Nullable<double> _SER_MAXWIDTH;
		
		private System.Nullable<double> _SER_MAXDEPTH;
		
		private System.Nullable<double> _SER_PRICE;
		
		private System.Nullable<System.DateTime> _SER_ESTIMATE_DATE;
		
		private EntitySet<ORDER> _ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSER_IDChanging(int value);
    partial void OnSER_IDChanged();
    partial void OnSER_NAMEChanging(string value);
    partial void OnSER_NAMEChanged();
    partial void OnSER_DESChanging(string value);
    partial void OnSER_DESChanged();
    partial void OnSER_PARCEL_WEIGHTChanging(System.Nullable<double> value);
    partial void OnSER_PARCEL_WEIGHTChanged();
    partial void OnSER_MAXLENGTHChanging(System.Nullable<double> value);
    partial void OnSER_MAXLENGTHChanged();
    partial void OnSER_MAXWIDTHChanging(System.Nullable<double> value);
    partial void OnSER_MAXWIDTHChanged();
    partial void OnSER_MAXDEPTHChanging(System.Nullable<double> value);
    partial void OnSER_MAXDEPTHChanged();
    partial void OnSER_PRICEChanging(System.Nullable<double> value);
    partial void OnSER_PRICEChanged();
    partial void OnSER_ESTIMATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSER_ESTIMATE_DATEChanged();
    #endregion
		
		public DELIVERY_SERVICE()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SER_ID
		{
			get
			{
				return this._SER_ID;
			}
			set
			{
				if ((this._SER_ID != value))
				{
					this.OnSER_IDChanging(value);
					this.SendPropertyChanging();
					this._SER_ID = value;
					this.SendPropertyChanged("SER_ID");
					this.OnSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_NAME", DbType="NVarChar(50)")]
		public string SER_NAME
		{
			get
			{
				return this._SER_NAME;
			}
			set
			{
				if ((this._SER_NAME != value))
				{
					this.OnSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SER_NAME = value;
					this.SendPropertyChanged("SER_NAME");
					this.OnSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DES", DbType="NVarChar(100)")]
		public string SER_DES
		{
			get
			{
				return this._SER_DES;
			}
			set
			{
				if ((this._SER_DES != value))
				{
					this.OnSER_DESChanging(value);
					this.SendPropertyChanging();
					this._SER_DES = value;
					this.SendPropertyChanged("SER_DES");
					this.OnSER_DESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_PARCEL_WEIGHT", DbType="Float")]
		public System.Nullable<double> SER_PARCEL_WEIGHT
		{
			get
			{
				return this._SER_PARCEL_WEIGHT;
			}
			set
			{
				if ((this._SER_PARCEL_WEIGHT != value))
				{
					this.OnSER_PARCEL_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._SER_PARCEL_WEIGHT = value;
					this.SendPropertyChanged("SER_PARCEL_WEIGHT");
					this.OnSER_PARCEL_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_MAXLENGTH", DbType="Float")]
		public System.Nullable<double> SER_MAXLENGTH
		{
			get
			{
				return this._SER_MAXLENGTH;
			}
			set
			{
				if ((this._SER_MAXLENGTH != value))
				{
					this.OnSER_MAXLENGTHChanging(value);
					this.SendPropertyChanging();
					this._SER_MAXLENGTH = value;
					this.SendPropertyChanged("SER_MAXLENGTH");
					this.OnSER_MAXLENGTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_MAXWIDTH", DbType="Float")]
		public System.Nullable<double> SER_MAXWIDTH
		{
			get
			{
				return this._SER_MAXWIDTH;
			}
			set
			{
				if ((this._SER_MAXWIDTH != value))
				{
					this.OnSER_MAXWIDTHChanging(value);
					this.SendPropertyChanging();
					this._SER_MAXWIDTH = value;
					this.SendPropertyChanged("SER_MAXWIDTH");
					this.OnSER_MAXWIDTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_MAXDEPTH", DbType="Float")]
		public System.Nullable<double> SER_MAXDEPTH
		{
			get
			{
				return this._SER_MAXDEPTH;
			}
			set
			{
				if ((this._SER_MAXDEPTH != value))
				{
					this.OnSER_MAXDEPTHChanging(value);
					this.SendPropertyChanging();
					this._SER_MAXDEPTH = value;
					this.SendPropertyChanged("SER_MAXDEPTH");
					this.OnSER_MAXDEPTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_PRICE", DbType="Float")]
		public System.Nullable<double> SER_PRICE
		{
			get
			{
				return this._SER_PRICE;
			}
			set
			{
				if ((this._SER_PRICE != value))
				{
					this.OnSER_PRICEChanging(value);
					this.SendPropertyChanging();
					this._SER_PRICE = value;
					this.SendPropertyChanged("SER_PRICE");
					this.OnSER_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_ESTIMATE_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> SER_ESTIMATE_DATE
		{
			get
			{
				return this._SER_ESTIMATE_DATE;
			}
			set
			{
				if ((this._SER_ESTIMATE_DATE != value))
				{
					this.OnSER_ESTIMATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._SER_ESTIMATE_DATE = value;
					this.SendPropertyChanged("SER_ESTIMATE_DATE");
					this.OnSER_ESTIMATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DELIVERY_SERVICE_ORDER", Storage="_ORDERs", ThisKey="SER_ID", OtherKey="ORD_SER_ID")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.DELIVERY_SERVICE = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.DELIVERY_SERVICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMAGES")]
	public partial class IMAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IMG_ID;
		
		private int _IMG_ID_REF;
		
		private string _IMG_PACTH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIMG_IDChanging(int value);
    partial void OnIMG_IDChanged();
    partial void OnIMG_ID_REFChanging(int value);
    partial void OnIMG_ID_REFChanged();
    partial void OnIMG_PACTHChanging(string value);
    partial void OnIMG_PACTHChanged();
    #endregion
		
		public IMAGE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IMG_ID
		{
			get
			{
				return this._IMG_ID;
			}
			set
			{
				if ((this._IMG_ID != value))
				{
					this.OnIMG_IDChanging(value);
					this.SendPropertyChanging();
					this._IMG_ID = value;
					this.SendPropertyChanged("IMG_ID");
					this.OnIMG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG_ID_REF", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IMG_ID_REF
		{
			get
			{
				return this._IMG_ID_REF;
			}
			set
			{
				if ((this._IMG_ID_REF != value))
				{
					this.OnIMG_ID_REFChanging(value);
					this.SendPropertyChanging();
					this._IMG_ID_REF = value;
					this.SendPropertyChanged("IMG_ID_REF");
					this.OnIMG_ID_REFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG_PACTH", DbType="NVarChar(100)")]
		public string IMG_PACTH
		{
			get
			{
				return this._IMG_PACTH;
			}
			set
			{
				if ((this._IMG_PACTH != value))
				{
					this.OnIMG_PACTHChanging(value);
					this.SendPropertyChanging();
					this._IMG_PACTH = value;
					this.SendPropertyChanged("IMG_PACTH");
					this.OnIMG_PACTHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DETAIL")]
	public partial class ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OD_ID;
		
		private System.Nullable<int> _OD_ORD_ID;
		
		private System.Nullable<int> _OD_PRO_ID;
		
		private string _OD_PRO_NAME;
		
		private System.Nullable<double> _OD_PRO_UNIT_PRICE;
		
		private System.Nullable<double> _OD_PRO_AMOUNT;
		
		private EntityRef<ORDER> _ORDER;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOD_IDChanging(int value);
    partial void OnOD_IDChanged();
    partial void OnOD_ORD_IDChanging(System.Nullable<int> value);
    partial void OnOD_ORD_IDChanged();
    partial void OnOD_PRO_IDChanging(System.Nullable<int> value);
    partial void OnOD_PRO_IDChanged();
    partial void OnOD_PRO_NAMEChanging(string value);
    partial void OnOD_PRO_NAMEChanged();
    partial void OnOD_PRO_UNIT_PRICEChanging(System.Nullable<double> value);
    partial void OnOD_PRO_UNIT_PRICEChanged();
    partial void OnOD_PRO_AMOUNTChanging(System.Nullable<double> value);
    partial void OnOD_PRO_AMOUNTChanged();
    #endregion
		
		public ORDER_DETAIL()
		{
			this._ORDER = default(EntityRef<ORDER>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OD_ID
		{
			get
			{
				return this._OD_ID;
			}
			set
			{
				if ((this._OD_ID != value))
				{
					this.OnOD_IDChanging(value);
					this.SendPropertyChanging();
					this._OD_ID = value;
					this.SendPropertyChanged("OD_ID");
					this.OnOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_ORD_ID", DbType="Int")]
		public System.Nullable<int> OD_ORD_ID
		{
			get
			{
				return this._OD_ORD_ID;
			}
			set
			{
				if ((this._OD_ORD_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOD_ORD_IDChanging(value);
					this.SendPropertyChanging();
					this._OD_ORD_ID = value;
					this.SendPropertyChanged("OD_ORD_ID");
					this.OnOD_ORD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_PRO_ID", DbType="Int")]
		public System.Nullable<int> OD_PRO_ID
		{
			get
			{
				return this._OD_PRO_ID;
			}
			set
			{
				if ((this._OD_PRO_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOD_PRO_IDChanging(value);
					this.SendPropertyChanging();
					this._OD_PRO_ID = value;
					this.SendPropertyChanged("OD_PRO_ID");
					this.OnOD_PRO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_PRO_NAME", DbType="NVarChar(50)")]
		public string OD_PRO_NAME
		{
			get
			{
				return this._OD_PRO_NAME;
			}
			set
			{
				if ((this._OD_PRO_NAME != value))
				{
					this.OnOD_PRO_NAMEChanging(value);
					this.SendPropertyChanging();
					this._OD_PRO_NAME = value;
					this.SendPropertyChanged("OD_PRO_NAME");
					this.OnOD_PRO_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_PRO_UNIT_PRICE", DbType="Float")]
		public System.Nullable<double> OD_PRO_UNIT_PRICE
		{
			get
			{
				return this._OD_PRO_UNIT_PRICE;
			}
			set
			{
				if ((this._OD_PRO_UNIT_PRICE != value))
				{
					this.OnOD_PRO_UNIT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._OD_PRO_UNIT_PRICE = value;
					this.SendPropertyChanged("OD_PRO_UNIT_PRICE");
					this.OnOD_PRO_UNIT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD_PRO_AMOUNT", DbType="Float")]
		public System.Nullable<double> OD_PRO_AMOUNT
		{
			get
			{
				return this._OD_PRO_AMOUNT;
			}
			set
			{
				if ((this._OD_PRO_AMOUNT != value))
				{
					this.OnOD_PRO_AMOUNTChanging(value);
					this.SendPropertyChanging();
					this._OD_PRO_AMOUNT = value;
					this.SendPropertyChanged("OD_PRO_AMOUNT");
					this.OnOD_PRO_AMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DETAIL", Storage="_ORDER", ThisKey="OD_ORD_ID", OtherKey="ORD_ID", IsForeignKey=true)]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._OD_ORD_ID = value.ORD_ID;
					}
					else
					{
						this._OD_ORD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDER_DETAIL", Storage="_PRODUCT", ThisKey="OD_PRO_ID", OtherKey="PRO_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._OD_PRO_ID = value.PRO_ID;
					}
					else
					{
						this._OD_PRO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ORD_ID;
		
		private System.Nullable<System.DateTime> _ORD_DATE;
		
		private System.Nullable<bool> _ORD_PAID_STATUS;
		
		private System.Nullable<double> _ORD_TOTAL_AMOUNT;
		
		private System.Nullable<bool> _ORD_SHIPPING_STATUS;
		
		private System.Nullable<double> _ORD_TOTLA_PRICE;
		
		private string _ORD_NOTE;
		
		private System.Nullable<int> _ORD_SER_ID;
		
		private System.Nullable<int> _ORD_CUS_ID;
		
		private string _ORD_BILL_ADDRESS;
		
		private string _ORD_BILL_CITY;
		
		private string _ORD_BILL_COUNTRY;
		
		private string _ORD_BILL_POSTCODE;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<DELIVERY_SERVICE> _DELIVERY_SERVICE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnORD_IDChanging(int value);
    partial void OnORD_IDChanged();
    partial void OnORD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnORD_DATEChanged();
    partial void OnORD_PAID_STATUSChanging(System.Nullable<bool> value);
    partial void OnORD_PAID_STATUSChanged();
    partial void OnORD_TOTAL_AMOUNTChanging(System.Nullable<double> value);
    partial void OnORD_TOTAL_AMOUNTChanged();
    partial void OnORD_SHIPPING_STATUSChanging(System.Nullable<bool> value);
    partial void OnORD_SHIPPING_STATUSChanged();
    partial void OnORD_TOTLA_PRICEChanging(System.Nullable<double> value);
    partial void OnORD_TOTLA_PRICEChanged();
    partial void OnORD_NOTEChanging(string value);
    partial void OnORD_NOTEChanged();
    partial void OnORD_SER_IDChanging(System.Nullable<int> value);
    partial void OnORD_SER_IDChanged();
    partial void OnORD_CUS_IDChanging(System.Nullable<int> value);
    partial void OnORD_CUS_IDChanged();
    partial void OnORD_BILL_ADDRESSChanging(string value);
    partial void OnORD_BILL_ADDRESSChanged();
    partial void OnORD_BILL_CITYChanging(string value);
    partial void OnORD_BILL_CITYChanged();
    partial void OnORD_BILL_COUNTRYChanging(string value);
    partial void OnORD_BILL_COUNTRYChanged();
    partial void OnORD_BILL_POSTCODEChanging(string value);
    partial void OnORD_BILL_POSTCODEChanged();
    #endregion
		
		public ORDER()
		{
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._DELIVERY_SERVICE = default(EntityRef<DELIVERY_SERVICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ORD_ID
		{
			get
			{
				return this._ORD_ID;
			}
			set
			{
				if ((this._ORD_ID != value))
				{
					this.OnORD_IDChanging(value);
					this.SendPropertyChanging();
					this._ORD_ID = value;
					this.SendPropertyChanged("ORD_ID");
					this.OnORD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ORD_DATE
		{
			get
			{
				return this._ORD_DATE;
			}
			set
			{
				if ((this._ORD_DATE != value))
				{
					this.OnORD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ORD_DATE = value;
					this.SendPropertyChanged("ORD_DATE");
					this.OnORD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_PAID_STATUS", DbType="Bit")]
		public System.Nullable<bool> ORD_PAID_STATUS
		{
			get
			{
				return this._ORD_PAID_STATUS;
			}
			set
			{
				if ((this._ORD_PAID_STATUS != value))
				{
					this.OnORD_PAID_STATUSChanging(value);
					this.SendPropertyChanging();
					this._ORD_PAID_STATUS = value;
					this.SendPropertyChanged("ORD_PAID_STATUS");
					this.OnORD_PAID_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_TOTAL_AMOUNT", DbType="Float")]
		public System.Nullable<double> ORD_TOTAL_AMOUNT
		{
			get
			{
				return this._ORD_TOTAL_AMOUNT;
			}
			set
			{
				if ((this._ORD_TOTAL_AMOUNT != value))
				{
					this.OnORD_TOTAL_AMOUNTChanging(value);
					this.SendPropertyChanging();
					this._ORD_TOTAL_AMOUNT = value;
					this.SendPropertyChanged("ORD_TOTAL_AMOUNT");
					this.OnORD_TOTAL_AMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_SHIPPING_STATUS", DbType="Bit")]
		public System.Nullable<bool> ORD_SHIPPING_STATUS
		{
			get
			{
				return this._ORD_SHIPPING_STATUS;
			}
			set
			{
				if ((this._ORD_SHIPPING_STATUS != value))
				{
					this.OnORD_SHIPPING_STATUSChanging(value);
					this.SendPropertyChanging();
					this._ORD_SHIPPING_STATUS = value;
					this.SendPropertyChanged("ORD_SHIPPING_STATUS");
					this.OnORD_SHIPPING_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_TOTLA_PRICE", DbType="Float")]
		public System.Nullable<double> ORD_TOTLA_PRICE
		{
			get
			{
				return this._ORD_TOTLA_PRICE;
			}
			set
			{
				if ((this._ORD_TOTLA_PRICE != value))
				{
					this.OnORD_TOTLA_PRICEChanging(value);
					this.SendPropertyChanging();
					this._ORD_TOTLA_PRICE = value;
					this.SendPropertyChanged("ORD_TOTLA_PRICE");
					this.OnORD_TOTLA_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_NOTE", DbType="NVarChar(100)")]
		public string ORD_NOTE
		{
			get
			{
				return this._ORD_NOTE;
			}
			set
			{
				if ((this._ORD_NOTE != value))
				{
					this.OnORD_NOTEChanging(value);
					this.SendPropertyChanging();
					this._ORD_NOTE = value;
					this.SendPropertyChanged("ORD_NOTE");
					this.OnORD_NOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_SER_ID", DbType="Int")]
		public System.Nullable<int> ORD_SER_ID
		{
			get
			{
				return this._ORD_SER_ID;
			}
			set
			{
				if ((this._ORD_SER_ID != value))
				{
					if (this._DELIVERY_SERVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORD_SER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORD_SER_ID = value;
					this.SendPropertyChanged("ORD_SER_ID");
					this.OnORD_SER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_CUS_ID", DbType="Int")]
		public System.Nullable<int> ORD_CUS_ID
		{
			get
			{
				return this._ORD_CUS_ID;
			}
			set
			{
				if ((this._ORD_CUS_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORD_CUS_IDChanging(value);
					this.SendPropertyChanging();
					this._ORD_CUS_ID = value;
					this.SendPropertyChanged("ORD_CUS_ID");
					this.OnORD_CUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_BILL_ADDRESS", DbType="NVarChar(50)")]
		public string ORD_BILL_ADDRESS
		{
			get
			{
				return this._ORD_BILL_ADDRESS;
			}
			set
			{
				if ((this._ORD_BILL_ADDRESS != value))
				{
					this.OnORD_BILL_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ORD_BILL_ADDRESS = value;
					this.SendPropertyChanged("ORD_BILL_ADDRESS");
					this.OnORD_BILL_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_BILL_CITY", DbType="NVarChar(20)")]
		public string ORD_BILL_CITY
		{
			get
			{
				return this._ORD_BILL_CITY;
			}
			set
			{
				if ((this._ORD_BILL_CITY != value))
				{
					this.OnORD_BILL_CITYChanging(value);
					this.SendPropertyChanging();
					this._ORD_BILL_CITY = value;
					this.SendPropertyChanged("ORD_BILL_CITY");
					this.OnORD_BILL_CITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_BILL_COUNTRY", DbType="NVarChar(20)")]
		public string ORD_BILL_COUNTRY
		{
			get
			{
				return this._ORD_BILL_COUNTRY;
			}
			set
			{
				if ((this._ORD_BILL_COUNTRY != value))
				{
					this.OnORD_BILL_COUNTRYChanging(value);
					this.SendPropertyChanging();
					this._ORD_BILL_COUNTRY = value;
					this.SendPropertyChanged("ORD_BILL_COUNTRY");
					this.OnORD_BILL_COUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORD_BILL_POSTCODE", DbType="NVarChar(20)")]
		public string ORD_BILL_POSTCODE
		{
			get
			{
				return this._ORD_BILL_POSTCODE;
			}
			set
			{
				if ((this._ORD_BILL_POSTCODE != value))
				{
					this.OnORD_BILL_POSTCODEChanging(value);
					this.SendPropertyChanging();
					this._ORD_BILL_POSTCODE = value;
					this.SendPropertyChanged("ORD_BILL_POSTCODE");
					this.OnORD_BILL_POSTCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="ORD_ID", OtherKey="OD_ORD_ID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_CUSTOMER", ThisKey="ORD_CUS_ID", OtherKey="CUS_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._ORD_CUS_ID = value.CUS_ID;
					}
					else
					{
						this._ORD_CUS_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DELIVERY_SERVICE_ORDER", Storage="_DELIVERY_SERVICE", ThisKey="ORD_SER_ID", OtherKey="SER_ID", IsForeignKey=true)]
		public DELIVERY_SERVICE DELIVERY_SERVICE
		{
			get
			{
				return this._DELIVERY_SERVICE.Entity;
			}
			set
			{
				DELIVERY_SERVICE previousValue = this._DELIVERY_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._DELIVERY_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DELIVERY_SERVICE.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._DELIVERY_SERVICE.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._ORD_SER_ID = value.SER_ID;
					}
					else
					{
						this._ORD_SER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DELIVERY_SERVICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT")]
	public partial class PAYMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PAY_ID;
		
		private string _PAY_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAY_IDChanging(int value);
    partial void OnPAY_IDChanged();
    partial void OnPAY_TYPEChanging(string value);
    partial void OnPAY_TYPEChanged();
    #endregion
		
		public PAYMENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PAY_ID
		{
			get
			{
				return this._PAY_ID;
			}
			set
			{
				if ((this._PAY_ID != value))
				{
					this.OnPAY_IDChanging(value);
					this.SendPropertyChanging();
					this._PAY_ID = value;
					this.SendPropertyChanged("PAY_ID");
					this.OnPAY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAY_TYPE", DbType="NVarChar(50)")]
		public string PAY_TYPE
		{
			get
			{
				return this._PAY_TYPE;
			}
			set
			{
				if ((this._PAY_TYPE != value))
				{
					this.OnPAY_TYPEChanging(value);
					this.SendPropertyChanging();
					this._PAY_TYPE = value;
					this.SendPropertyChanged("PAY_TYPE");
					this.OnPAY_TYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRO_ID;
		
		private string _PRO_NAME;
		
		private string _PRO_DES;
		
		private System.Nullable<double> _PRO_LENGTH;
		
		private System.Nullable<double> _PRO_WIDTH;
		
		private System.Nullable<double> _PRO_DEPTH;
		
		private System.Nullable<double> _PRO_DIAMETER;
		
		private System.Nullable<double> _PRO_UNIT_WEIGHT;
		
		private string _PRO_COLOR;
		
		private System.Nullable<double> _PRO_SUP_UNIT_PRICE;
		
		private System.Nullable<double> _PRO_SUP_QUANTITY;
		
		private System.Nullable<double> _PRO_SALE_UNIT_PRICE;
		
		private System.Nullable<double> _PRO_DISCOUNT_AVAILABLE;
		
		private System.Nullable<double> _PRO_DISCOUNT_PERCENT;
		
		private System.Nullable<int> _PRO_SUBCAT_ID;
		
		private System.Nullable<int> _PRO_SUP_ID;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntityRef<SUPPIER> _SUPPIER;
		
		private EntityRef<SUBCATEGORY> _SUBCATEGORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRO_IDChanging(int value);
    partial void OnPRO_IDChanged();
    partial void OnPRO_NAMEChanging(string value);
    partial void OnPRO_NAMEChanged();
    partial void OnPRO_DESChanging(string value);
    partial void OnPRO_DESChanged();
    partial void OnPRO_LENGTHChanging(System.Nullable<double> value);
    partial void OnPRO_LENGTHChanged();
    partial void OnPRO_WIDTHChanging(System.Nullable<double> value);
    partial void OnPRO_WIDTHChanged();
    partial void OnPRO_DEPTHChanging(System.Nullable<double> value);
    partial void OnPRO_DEPTHChanged();
    partial void OnPRO_DIAMETERChanging(System.Nullable<double> value);
    partial void OnPRO_DIAMETERChanged();
    partial void OnPRO_UNIT_WEIGHTChanging(System.Nullable<double> value);
    partial void OnPRO_UNIT_WEIGHTChanged();
    partial void OnPRO_COLORChanging(string value);
    partial void OnPRO_COLORChanged();
    partial void OnPRO_SUP_UNIT_PRICEChanging(System.Nullable<double> value);
    partial void OnPRO_SUP_UNIT_PRICEChanged();
    partial void OnPRO_SUP_QUANTITYChanging(System.Nullable<double> value);
    partial void OnPRO_SUP_QUANTITYChanged();
    partial void OnPRO_SALE_UNIT_PRICEChanging(System.Nullable<double> value);
    partial void OnPRO_SALE_UNIT_PRICEChanged();
    partial void OnPRO_DISCOUNT_AVAILABLEChanging(System.Nullable<double> value);
    partial void OnPRO_DISCOUNT_AVAILABLEChanged();
    partial void OnPRO_DISCOUNT_PERCENTChanging(System.Nullable<double> value);
    partial void OnPRO_DISCOUNT_PERCENTChanged();
    partial void OnPRO_SUBCAT_IDChanging(System.Nullable<int> value);
    partial void OnPRO_SUBCAT_IDChanged();
    partial void OnPRO_SUP_IDChanging(System.Nullable<int> value);
    partial void OnPRO_SUP_IDChanged();
    #endregion
		
		public PRODUCT()
		{
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._SUPPIER = default(EntityRef<SUPPIER>);
			this._SUBCATEGORY = default(EntityRef<SUBCATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRO_ID
		{
			get
			{
				return this._PRO_ID;
			}
			set
			{
				if ((this._PRO_ID != value))
				{
					this.OnPRO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRO_ID = value;
					this.SendPropertyChanged("PRO_ID");
					this.OnPRO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_NAME", DbType="NVarChar(50)")]
		public string PRO_NAME
		{
			get
			{
				return this._PRO_NAME;
			}
			set
			{
				if ((this._PRO_NAME != value))
				{
					this.OnPRO_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PRO_NAME = value;
					this.SendPropertyChanged("PRO_NAME");
					this.OnPRO_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_DES", DbType="NVarChar(100)")]
		public string PRO_DES
		{
			get
			{
				return this._PRO_DES;
			}
			set
			{
				if ((this._PRO_DES != value))
				{
					this.OnPRO_DESChanging(value);
					this.SendPropertyChanging();
					this._PRO_DES = value;
					this.SendPropertyChanged("PRO_DES");
					this.OnPRO_DESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_LENGTH", DbType="Float")]
		public System.Nullable<double> PRO_LENGTH
		{
			get
			{
				return this._PRO_LENGTH;
			}
			set
			{
				if ((this._PRO_LENGTH != value))
				{
					this.OnPRO_LENGTHChanging(value);
					this.SendPropertyChanging();
					this._PRO_LENGTH = value;
					this.SendPropertyChanged("PRO_LENGTH");
					this.OnPRO_LENGTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_WIDTH", DbType="Float")]
		public System.Nullable<double> PRO_WIDTH
		{
			get
			{
				return this._PRO_WIDTH;
			}
			set
			{
				if ((this._PRO_WIDTH != value))
				{
					this.OnPRO_WIDTHChanging(value);
					this.SendPropertyChanging();
					this._PRO_WIDTH = value;
					this.SendPropertyChanged("PRO_WIDTH");
					this.OnPRO_WIDTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_DEPTH", DbType="Float")]
		public System.Nullable<double> PRO_DEPTH
		{
			get
			{
				return this._PRO_DEPTH;
			}
			set
			{
				if ((this._PRO_DEPTH != value))
				{
					this.OnPRO_DEPTHChanging(value);
					this.SendPropertyChanging();
					this._PRO_DEPTH = value;
					this.SendPropertyChanged("PRO_DEPTH");
					this.OnPRO_DEPTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_DIAMETER", DbType="Float")]
		public System.Nullable<double> PRO_DIAMETER
		{
			get
			{
				return this._PRO_DIAMETER;
			}
			set
			{
				if ((this._PRO_DIAMETER != value))
				{
					this.OnPRO_DIAMETERChanging(value);
					this.SendPropertyChanging();
					this._PRO_DIAMETER = value;
					this.SendPropertyChanged("PRO_DIAMETER");
					this.OnPRO_DIAMETERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_UNIT_WEIGHT", DbType="Float")]
		public System.Nullable<double> PRO_UNIT_WEIGHT
		{
			get
			{
				return this._PRO_UNIT_WEIGHT;
			}
			set
			{
				if ((this._PRO_UNIT_WEIGHT != value))
				{
					this.OnPRO_UNIT_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._PRO_UNIT_WEIGHT = value;
					this.SendPropertyChanged("PRO_UNIT_WEIGHT");
					this.OnPRO_UNIT_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_COLOR", DbType="VarChar(10)")]
		public string PRO_COLOR
		{
			get
			{
				return this._PRO_COLOR;
			}
			set
			{
				if ((this._PRO_COLOR != value))
				{
					this.OnPRO_COLORChanging(value);
					this.SendPropertyChanging();
					this._PRO_COLOR = value;
					this.SendPropertyChanged("PRO_COLOR");
					this.OnPRO_COLORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SUP_UNIT_PRICE", DbType="Float")]
		public System.Nullable<double> PRO_SUP_UNIT_PRICE
		{
			get
			{
				return this._PRO_SUP_UNIT_PRICE;
			}
			set
			{
				if ((this._PRO_SUP_UNIT_PRICE != value))
				{
					this.OnPRO_SUP_UNIT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._PRO_SUP_UNIT_PRICE = value;
					this.SendPropertyChanged("PRO_SUP_UNIT_PRICE");
					this.OnPRO_SUP_UNIT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SUP_QUANTITY", DbType="Float")]
		public System.Nullable<double> PRO_SUP_QUANTITY
		{
			get
			{
				return this._PRO_SUP_QUANTITY;
			}
			set
			{
				if ((this._PRO_SUP_QUANTITY != value))
				{
					this.OnPRO_SUP_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._PRO_SUP_QUANTITY = value;
					this.SendPropertyChanged("PRO_SUP_QUANTITY");
					this.OnPRO_SUP_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SALE_UNIT_PRICE", DbType="Float")]
		public System.Nullable<double> PRO_SALE_UNIT_PRICE
		{
			get
			{
				return this._PRO_SALE_UNIT_PRICE;
			}
			set
			{
				if ((this._PRO_SALE_UNIT_PRICE != value))
				{
					this.OnPRO_SALE_UNIT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._PRO_SALE_UNIT_PRICE = value;
					this.SendPropertyChanged("PRO_SALE_UNIT_PRICE");
					this.OnPRO_SALE_UNIT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_DISCOUNT_AVAILABLE", DbType="Float")]
		public System.Nullable<double> PRO_DISCOUNT_AVAILABLE
		{
			get
			{
				return this._PRO_DISCOUNT_AVAILABLE;
			}
			set
			{
				if ((this._PRO_DISCOUNT_AVAILABLE != value))
				{
					this.OnPRO_DISCOUNT_AVAILABLEChanging(value);
					this.SendPropertyChanging();
					this._PRO_DISCOUNT_AVAILABLE = value;
					this.SendPropertyChanged("PRO_DISCOUNT_AVAILABLE");
					this.OnPRO_DISCOUNT_AVAILABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_DISCOUNT_PERCENT", DbType="Float")]
		public System.Nullable<double> PRO_DISCOUNT_PERCENT
		{
			get
			{
				return this._PRO_DISCOUNT_PERCENT;
			}
			set
			{
				if ((this._PRO_DISCOUNT_PERCENT != value))
				{
					this.OnPRO_DISCOUNT_PERCENTChanging(value);
					this.SendPropertyChanging();
					this._PRO_DISCOUNT_PERCENT = value;
					this.SendPropertyChanged("PRO_DISCOUNT_PERCENT");
					this.OnPRO_DISCOUNT_PERCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SUBCAT_ID", DbType="Int")]
		public System.Nullable<int> PRO_SUBCAT_ID
		{
			get
			{
				return this._PRO_SUBCAT_ID;
			}
			set
			{
				if ((this._PRO_SUBCAT_ID != value))
				{
					if (this._SUBCATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRO_SUBCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRO_SUBCAT_ID = value;
					this.SendPropertyChanged("PRO_SUBCAT_ID");
					this.OnPRO_SUBCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SUP_ID", DbType="Int")]
		public System.Nullable<int> PRO_SUP_ID
		{
			get
			{
				return this._PRO_SUP_ID;
			}
			set
			{
				if ((this._PRO_SUP_ID != value))
				{
					if (this._SUPPIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRO_SUP_IDChanging(value);
					this.SendPropertyChanging();
					this._PRO_SUP_ID = value;
					this.SendPropertyChanged("PRO_SUP_ID");
					this.OnPRO_SUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="PRO_ID", OtherKey="OD_PRO_ID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPIER_PRODUCT", Storage="_SUPPIER", ThisKey="PRO_SUP_ID", OtherKey="SUP_ID", IsForeignKey=true)]
		public SUPPIER SUPPIER
		{
			get
			{
				return this._SUPPIER.Entity;
			}
			set
			{
				SUPPIER previousValue = this._SUPPIER.Entity;
				if (((previousValue != value) 
							|| (this._SUPPIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPIER.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._SUPPIER.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._PRO_SUP_ID = value.SUP_ID;
					}
					else
					{
						this._PRO_SUP_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SUPPIER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUBCATEGORY_PRODUCT", Storage="_SUBCATEGORY", ThisKey="PRO_SUBCAT_ID", OtherKey="SUBCAT_ID", IsForeignKey=true)]
		public SUBCATEGORY SUBCATEGORY
		{
			get
			{
				return this._SUBCATEGORY.Entity;
			}
			set
			{
				SUBCATEGORY previousValue = this._SUBCATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._SUBCATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUBCATEGORY.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._SUBCATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._PRO_SUBCAT_ID = value.SUBCAT_ID;
					}
					else
					{
						this._PRO_SUBCAT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SUBCATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUBCATEGORY")]
	public partial class SUBCATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUBCAT_ID;
		
		private string _SUBCAT_NAME;
		
		private string _SUBCAT_DES;
		
		private System.Nullable<int> _SUBCAT_CAT_ID;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUBCAT_IDChanging(int value);
    partial void OnSUBCAT_IDChanged();
    partial void OnSUBCAT_NAMEChanging(string value);
    partial void OnSUBCAT_NAMEChanged();
    partial void OnSUBCAT_DESChanging(string value);
    partial void OnSUBCAT_DESChanged();
    partial void OnSUBCAT_CAT_IDChanging(System.Nullable<int> value);
    partial void OnSUBCAT_CAT_IDChanged();
    #endregion
		
		public SUBCATEGORY()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			this._CATEGORY = default(EntityRef<CATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SUBCAT_ID
		{
			get
			{
				return this._SUBCAT_ID;
			}
			set
			{
				if ((this._SUBCAT_ID != value))
				{
					this.OnSUBCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_ID = value;
					this.SendPropertyChanged("SUBCAT_ID");
					this.OnSUBCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_NAME", DbType="NVarChar(50)")]
		public string SUBCAT_NAME
		{
			get
			{
				return this._SUBCAT_NAME;
			}
			set
			{
				if ((this._SUBCAT_NAME != value))
				{
					this.OnSUBCAT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_NAME = value;
					this.SendPropertyChanged("SUBCAT_NAME");
					this.OnSUBCAT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_DES", DbType="NVarChar(100)")]
		public string SUBCAT_DES
		{
			get
			{
				return this._SUBCAT_DES;
			}
			set
			{
				if ((this._SUBCAT_DES != value))
				{
					this.OnSUBCAT_DESChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_DES = value;
					this.SendPropertyChanged("SUBCAT_DES");
					this.OnSUBCAT_DESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_CAT_ID", DbType="Int")]
		public System.Nullable<int> SUBCAT_CAT_ID
		{
			get
			{
				return this._SUBCAT_CAT_ID;
			}
			set
			{
				if ((this._SUBCAT_CAT_ID != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUBCAT_CAT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_CAT_ID = value;
					this.SendPropertyChanged("SUBCAT_CAT_ID");
					this.OnSUBCAT_CAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUBCATEGORY_PRODUCT", Storage="_PRODUCTs", ThisKey="SUBCAT_ID", OtherKey="PRO_SUBCAT_ID")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_SUBCATEGORY", Storage="_CATEGORY", ThisKey="SUBCAT_CAT_ID", OtherKey="CAT_ID", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.SUBCATEGORies.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.SUBCATEGORies.Add(this);
						this._SUBCAT_CAT_ID = value.CAT_ID;
					}
					else
					{
						this._SUBCAT_CAT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SUBCATEGORY = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SUBCATEGORY = null;
		}
	}
}
#pragma warning restore 1591
