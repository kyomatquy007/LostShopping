#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LostShoppingServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SHOPPING")]
	public partial class SubCategoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSUBCATEGORY(SUBCATEGORY instance);
    partial void UpdateSUBCATEGORY(SUBCATEGORY instance);
    partial void DeleteSUBCATEGORY(SUBCATEGORY instance);
    #endregion
		
		public SubCategoryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SHOPPINGConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SubCategoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SubCategoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SubCategoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SubCategoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SUBCATEGORY> SUBCATEGORies
		{
			get
			{
				return this.GetTable<SUBCATEGORY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUBCATEGORY")]
	public partial class SUBCATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUBCAT_ID;
		
		private string _SUBCAT_NAME;
		
		private string _SUBCAT_DES;
		
		private System.Nullable<int> _SUBCAT_CAT_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUBCAT_IDChanging(int value);
    partial void OnSUBCAT_IDChanged();
    partial void OnSUBCAT_NAMEChanging(string value);
    partial void OnSUBCAT_NAMEChanged();
    partial void OnSUBCAT_DESChanging(string value);
    partial void OnSUBCAT_DESChanged();
    partial void OnSUBCAT_CAT_IDChanging(System.Nullable<int> value);
    partial void OnSUBCAT_CAT_IDChanged();
    #endregion
		
		public SUBCATEGORY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SUBCAT_ID
		{
			get
			{
				return this._SUBCAT_ID;
			}
			set
			{
				if ((this._SUBCAT_ID != value))
				{
					this.OnSUBCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_ID = value;
					this.SendPropertyChanged("SUBCAT_ID");
					this.OnSUBCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_NAME", DbType="NVarChar(50)")]
		public string SUBCAT_NAME
		{
			get
			{
				return this._SUBCAT_NAME;
			}
			set
			{
				if ((this._SUBCAT_NAME != value))
				{
					this.OnSUBCAT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_NAME = value;
					this.SendPropertyChanged("SUBCAT_NAME");
					this.OnSUBCAT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_DES", DbType="NVarChar(100)")]
		public string SUBCAT_DES
		{
			get
			{
				return this._SUBCAT_DES;
			}
			set
			{
				if ((this._SUBCAT_DES != value))
				{
					this.OnSUBCAT_DESChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_DES = value;
					this.SendPropertyChanged("SUBCAT_DES");
					this.OnSUBCAT_DESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBCAT_CAT_ID", DbType="Int")]
		public System.Nullable<int> SUBCAT_CAT_ID
		{
			get
			{
				return this._SUBCAT_CAT_ID;
			}
			set
			{
				if ((this._SUBCAT_CAT_ID != value))
				{
					this.OnSUBCAT_CAT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBCAT_CAT_ID = value;
					this.SendPropertyChanged("SUBCAT_CAT_ID");
					this.OnSUBCAT_CAT_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
